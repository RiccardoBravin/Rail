1) io utilizzerei un std::vetor<Train> park e uno Train[2] standard_rail e Train[2] transit_rail
2)(NO, lo gestisce Train)ad ogni istanza di Train nel parcheggio e nei binari io assocerei un contatore per memorizzare da quanto tempo è fermo rispettivamente nel parcheggio e nel binario
3)set_station_name() e set_station_distance() dovrebbero essere non public visto che vanno utilizzate solo nel costruttore
4)per coerenza, se implementerei set_station_type, anche se secondo me non servono visto che questa e le precedenti servono solo a costruire l'oggetto
5)come idea, io farei in modo che il parcheggio non fosse "a lato" della stazione, ma "sovrastasse" i binari. ogni treno che entra nel raggio di X km dalla stazione entra automaticamente nel parcheggio, ed eventualmente ne esce al ciclo successivo (si perde un minuto per ogni treno, ma questo semplifica un po' la gestione... è un problema secondo voi?)
6)mancano le funzioni membro per la comunicazione fra la classe Simulation e ogni istanza di Station... ma queste in caso le aggiungiamo una volta decisa l'interfaccia di Simulation